import Config

# Do not include metadata nor timestamps in development logs
config :logger, :console, format: "[$level] $message\n"

# Initialize plugs at runtime for faster development compilation
config :phoenix, :plug_init_mode, :runtime

# Set a higher stacktrace during development. Avoid configuring such
# in production as building large stacktraces may be expensive.
config :phoenix, :stacktrace_depth, 20

config :phoenix_live_view,
  # Include HEEx debug annotations as HTML comments in rendered markup
  debug_heex_annotations: true,
  # Enable helpful, but potentially expensive runtime checks
  enable_expensive_runtime_checks: true

# Disable swoosh api client as it is only required for production adapters.
config :swoosh, :api_client, false

# Configure your database
config :zoonk, Zoonk.Repo,
  username: "postgres",
  password: "postgres",
  hostname: System.get_env("DATABASE_HOST") || "localhost",
  database: "zoonk_dev",
  stacktrace: true,
  show_sensitive_data_on_connection_error: true,
  pool_size: 10

# Configure Cloak
config :zoonk, Zoonk.Vault,
  ciphers: [
    default:
      {Cloak.Ciphers.AES.GCM, tag: "AES.GCM.V1", key: Base.decode64!("A7x+qcFD9yeRfl3GohiOFZM5bNCdHNu27B0Ozv8X4dE=")}
  ]

# For development, we disable any cache and enable
# debugging and code reloading.
#
# The watchers configuration can be used to run external
# watchers to your application. For example, we can use it
# to bundle .js and .css sources.
# Binding to loopback ipv4 address prevents access from other machines.
config :zoonk, ZoonkWeb.Endpoint,
  http: [ip: {0, 0, 0, 0}, port: 4000],
  https: [
    ip: {0, 0, 0, 0},
    port: 4001,
    cipher_suite: :strong,
    keyfile: "priv/cert/selfsigned_key.pem",
    certfile: "priv/cert/selfsigned.pem"
  ],
  check_origin: false,
  code_reloader: true,
  debug_errors: true,
  secret_key_base: "SV/6l7/SezeNb0ggc0XKvsdfWQKOyHL/a7nnO98KufNjW8waGKGbDFnD+q4ZyYpY",
  watchers: [
    esbuild: {Esbuild, :install_and_run, [:zoonk, ~w(--sourcemap=inline --watch)]},
    tailwind: {Tailwind, :install_and_run, [:zoonk, ~w(--watch)]}
  ]

# ## SSL Support
#
# In order to use HTTPS in development, a self-signed
# certificate can be generated by running the following
# Mix task:
#
#     mix phx.gen.cert
#
# Run `mix help phx.gen.cert` for more information.
#
# The `http:` config above can be replaced with:
#
#     https: [
#       port: 4001,
#       cipher_suite: :strong,
#       keyfile: "priv/cert/selfsigned_key.pem",
#       certfile: "priv/cert/selfsigned.pem"
#     ],
#
# If desired, both `http:` and `https:` keys can be
# configured to run both http and https servers on
# different ports.

# Watch static and templates for browser reloading.
config :zoonk, ZoonkWeb.Endpoint,
  live_reload: [
    patterns: [
      ~r"priv/static/(?!uploads/).*(js|css|png|jpeg|jpg|gif|svg)$",
      ~r"priv/gettext/.*(po)$",
      ~r"lib/zoonk_web/(controllers|live|components)/.*(ex|heex)$",
      ~r"lib/zoonk_dev/(layouts|ui_preview)/.*(ex|heex)$"
    ]
  ]

# AI models
config :zoonk, :ai_models,
  fast: System.get_env("AI_MODEL_FAST", "gpt-4.1-nano"),
  smart: System.get_env("AI_MODEL_SMART", "gpt-4.1-mini"),
  smartest: System.get_env("AI_MODEL_SMARTEST", "o4-mini"),
  smartest_fast: System.get_env("AI_MODEL_SMARTEST_FAST", "o4-mini"),
  thumbnail: System.get_env("AI_MODEL_THUMBNAIL", "black-forest-labs/FLUX.1-schnell"),
  exercise_image: System.get_env("AI_MODEL_EXERCISE_IMAGE", "black-forest-labs/FLUX.1-schnell")

# Enable dev routes for dashboard and mailbox
config :zoonk, dev_routes: true
